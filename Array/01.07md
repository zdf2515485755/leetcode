旋转矩阵

题目描述

给你一幅由 N × N 矩阵表示的图像，其中每个像素的大小为 4 字节。请你设计一种算法，将图像旋转 90 度。

不占用额外内存空间能否做到？

示例 1:

给定 matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],

原地旋转输入矩阵，使其变为:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]
示例 2:

给定 matrix =
[
  [ 5, 1, 9,11],
  [ 2, 4, 8,10],
  [13, 3, 6, 7],
  [15,14,12,16]
], 

原地旋转输入矩阵，使其变为:
[
  [15,13, 2, 5],
  [14, 3, 4, 1],
  [12, 6, 8, 9],
  [16, 7,10,11]
]

解题思路
从题目中我们可以可以发现顺时针旋转90度，翻转前第x行第y列元素翻转后变成第y行倒数第系列的元素,通过分析翻转前与翻转后元素下标的变化，我们可以发现有如下关系，a[i][j] = a[j][length - 1 - i]
所以思路1:
  可以初始化一个大小和目标数组大小相同的数组，循环给该数组按照以上关系赋值
思路2:
  可以先水平翻转，再按照\对角线翻转,水平翻转下标关系为,a[i][j] = a[length - 1 - i][j],\对角线翻转下标关系为,a[i][j] = a[j][i]
  
length = len(matrix)
#水平翻转
for i in range(length):
  for j in range(length):
    matrix[i][j], matrix[][] = matrix[][], ,matrix[][]
#\对角线翻转
  




